
from tensorflow import keras
from keras import datasets

mnist = datasets.mnist
#데이터 전처리
"""처음에 이미지가 0~255 사이의 값을 갖고있어서 나눠준 후
28*28로 reshape한다."""
(X_train, y_train), (X_test, y_test) = mnist.load_data()
X_train, X_test = X_train / 255.0, X_test / 255.0

X_train = X_train.reshape((60000, 28 ,28, 1))
X_test = X_test.reshape((10000, 28 ,28, 1))

#모델 구성
from keras import layers, models

model = models.Sequential([
    layers.Conv2D(32, kernel_size=(5, 5), strides=(1, 1),
                  padding='same', activation='relu', input_shape=(28, 28, 1)),
    layers.MaxPooling2D(pool_size=(2, 2), strides=(2, 2)),
    layers.Conv2D(64, kernel_size=(2, 2), activation='relu', padding='same'),
    layers.MaxPooling2D(pool_size=(2, 2)),
    layers.Dropout(0.25),
    layers.Flatten(),
    layers.Dense(1000, activation='relu'),
    layers.Dense(10, activation='softmax')
])

model.summary()

#fit

from keras import optimizers


import time
from keras import optimizers
#optimizers.
#optimzer = 'momentum', loss = '교차엔트로피')
model.compile(optimizer='adam', loss ='sparse_categorical_crossentropy', metrics=['accuracy'])
#걸린시간 측정하기위해 time라이브러리 사용
start_time = time.time()
hist = model.fit(X_train, y_train, epochs=5, verbose = 1, validation_data=(X_test, y_test))
print(f'Fit Time :{time.time() - start_time}')
test_loss, test_acc = model.evaluate(X_test, y_test)
print('테스트 정확도:', test_acc)
print('손실도 :', test_loss)

import matplotlib.pyplot as plt

plot_target = ['loss' , 'accuracy', 'val_loss', 'val_accuracy']
plt.figure(figsize=(12, 8))

for each in plot_target:
    plt.plot(hist.history[each], label = each)
plt.legend()
plt.grid()
plt.show()
